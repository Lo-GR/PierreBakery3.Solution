@{
  Layout = "_Layout";
}

@using Bakery.Models;
@using Bakery.ViewModels;
@model FlavorTreatViewModel

<h1>Welcome to Pierre Bakery!</h1>
<div class="row">
  <div class="col-4">
    <p>@Html.ActionLink("User Accounts", "Index", "Account")</p>
    @if (User.Identity.IsAuthenticated)
    {
      <p>@Html.ActionLink("Create Flavor", "Create", "Flavors")</p>
      <p>@Html.ActionLink("Create Treat", "Create", "Treats")</p>
    }
    else
    {
      <p>Login for additional options</p>
    }
  </div>
  <div class="col-4">
    <h3>List of Flavors</h3>
    @if (Model.flavorList.Any())
    {
      <ul>
        @foreach (Flavor element in Model.flavorList)
        {
          <li>@Html.ActionLink($"{element.FlavorName}", "Details", "Flavors", new { id = element.FlavorId })</li>
        }
      </ul>
    } 
    else
    {
      <h4>No Flavors have been added yet!</h4>
    }
  </div>
  <div class="col-4">
    <h3>List of Treats</h3>
    @if (Model.treatList.Any())
    {
      <ul>
        @foreach (Treat element in Model.treatList)
        {
          <li>@Html.ActionLink($"{element.TreatName}", "Details", "Treats", new { id = element.TreatId })</li>
        }
      </ul>
    } 
    else
    {
      <h4>No Treats have been added yet!</h4>
    }
  </div>
</div>